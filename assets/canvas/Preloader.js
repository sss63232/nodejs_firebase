// -- user code here --

/* --- start generated code --- */

// Generated by Phaser Editor 1.4.3 (Phaser v2.6.2)


class Preloader extends Phaser.State {

	/**
	 * Preloader.
	 */
	constructor() {

		super();

	}

	init() {

		this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
		this.scale.pageAlignHorizontally = true;
		this.scale.pageAlignVertically = true;
		this.game.renderer.renderSession.roundPixels = true;

	}

	preload() {

		this.load.pack('preloader', 'assets/pack.json');


		var _group = this.add.group();
		_group.position.setTo(-241, -52);

		var _logo = this.add.sprite(275, 149, 'logo', null, _group);
		_logo.tint = 0x808000;

		var _logo1 = this.add.sprite(275, 149, 'logo', null, _group);



		this.load.setPreloadSprite(_logo1, 0);

	}

	create() {
		this.preloadGameAudio();
	}

	/* state-methods-begin */
	preloadGameAudio() {
		this.game.load.audio('fight', ['assets/audio/fight.ogg', 'assets/audio/fight.mp3']);
	}

	// 確認 audio 已經 decode 完成才進入遊戲
	update() {
		if (this.game.cache.isSoundDecoded('fight')) {
			this.nextState();
		}
	}

	nextState() {
		this.game.state.start("Menu");
		// this.game.state.start("SinglePlayer");
	}

	/* state-methods-end */

}
/* --- end generated code --- */
// -- user code here --
export default Preloader;